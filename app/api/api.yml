openapi: 3.0.0
info:
  version: 1.0.0
  title: API Measure Detector UI
  description: Provides a bunch of useful REST Endpoints for the Measure Detector UI
servers:
  - url: http://localhost:8080/api
    description: server
paths:
  /list:
    get:
      description: Returns a list of stuff
      responses:
        '200':
          description: Successful response


  /edition/{editionID}/saveMeasureBoxes/{pageNr}:
    post:
      summary: Saves a sdet of possibly modified Measure Boxes back to the server. The reverse operation of [GET] getMeasureBoxes
      operationId: saveMeasureBoxesByEditionIdAndPageNr
      parameters:
      - name: editionID
        schema:
          type: integer
        in: path
        required: true
        description: the editionID
      - name: pageNr
        schema:
          type: integer
        in: path
        required: true
        description: the Page NR
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiOrchMeasureBoxList'
      responses:
        200:
          description: Everything worked fine
          # Todo maybe we have also errors to catch?

  /edition/{editionID}/getMeasureBoxes/{pageNr}:
    get:
      summary: returns an array of of the measureBoxes on a specific page on an edition
      operationId: getMeasureBoxesByEditionIdAndPageNr
      parameters:
        - name: editionID
          schema:
            type: integer
          in: path
          required: true
          description: the editionID
        - name: pageNr
          schema:
            type: integer
          in: path
          required: true
          description: the Page NR
      responses:
        "200":
          description: The page as a image file
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiOrchMeasureBoxList'
  /edition/{editionID}/getMeasureBoxesOffset/{pageNr}:
    get:
      summary: Return the offset on which the current measure adds up
      operationId: getMeasureBoxesOffsetByEditionIdAndPageNr
      parameters:
        - name: editionID
          schema:
            type: integer
          in: path
          required: true
          description: the editionID
        - name: pageNr
          schema:
            type: integer
          in: path
          required: true
          description: the Page Nr
      responses:
        "200":
          description: The Offset Number to the page
          content:
            application/json:
              schema:
                type: integer
                format: int64

  /edition/{editionID}/getPage/{pageNr}:
    get:
      summary: Returns the image file to the given page of the edition specified by the id
      operationId: getPageByPageNrAndEditionID
      parameters:
        - name: editionID
          schema:
            type: integer
          in: path
          required: true
          description: the editionID
        - name: pageNr
          schema:
            type: integer
          in: path
          required: true
          description: the Page NR
      responses:
        "200":
          description: The page as a image file
          content:
            image/png:
              schema:
                type: string
                format: binary
  /edition/runMeasureDetection/{id}:
    post:
      summary: runs the measure detection against an edition. Make sure that the measure detector is connected with the application
      operationId: runFullMeasureDetectionByEditionId
      parameters:
        - name: id
          schema:
            type: integer
          in: path
          required: true
          description: the ID of the edition to be measure-detected
      tags:
        - triggerMeasureDetection
      responses:
        "200":
          description: Expected response to a valid request
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
  /edition/{editionID}/getFullPDF:
      get:
        summary: Generates a PDF with all the MeasureBoxes for this edition
        operationId: getAnnotatedPDF
        parameters:
          - name: editionID
            schema:
              type: integer
              format: int64
            in: path
            required: true
            description: ID of the edition you want to generate a PDF from
        responses:
          200:
            description: Expected response to a valid request
            content:
              application/pdf:
                schema:
                  type: string
                  format: binary
  /edition/add:
    post:
      summary: Adds a new edition + a corresponding
      operationId: addEdition
      tags:
        - edition
        - add
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiOrchEditionWithFileAsString'
      responses:
        "200":
          description: Expected response to a valid request
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiOrchChartHome'
        "404":
          description: not found
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiOrchError'
        "501":
          description: server misconfiguration
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/ApiOrchError'

  /edition/{editionID}/getNumberPages:
    get:
      summary: Returns the number of pages to this edition. Can also be used to check whether the measure detection has already run (Currently)
      operationId: getNumberOfPagesToEdition
      parameters:
        - name: editionID
          schema:
            type: integer
            format: int64
          in: path
          required: true
          description: the ID of the edition where we want to get the number of pages
      responses:
        "200":
          description: Expected response to a valid request
          content:
            text/plain:
              schema:
                type: integer
                format: int64
components:
  schemas:
    ApiMeasureDetectorResult:
      type: object
      properties:
        measures:
          $ref: '#/components/schemas/MeasureBoxArray'
    MeasureBoxArray:
      type: array
      items:
        $ref: '#/components/schemas/MeasureBox'
    MeasureBox:
      type: object
      properties:
        left:
          type: string
        top:
          type: string
        right:
          type: string
        bottom:
          type: string
    ApiOrchEditionWithFile:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        createdDate:
          type: string
        type:
          type: string
        description:
          type: string
        pDFFileName:
          type: string
        pdfFile:
          type: string
          format: binary
        projectId:
          type: integer
    ApiOrchEditionWithFileAsString:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        createdDate:
          type: string
        type:
          type: string
        description:
          type: string
        pDFFileName:
          type: string
        pdfFile:
          type: string
          format: string
        projectId:
          type: integer
          format: int64
    ApiOrchMeasureBoxList:
      type: array
      items:
        $ref: '#/components/schemas/ApiOrchMeasureBox'
    ApiOrchMeasureBox:
      type: object
      properties:
        id:
          type: integer
          format: int64
        ulx:
          type: integer
          format: int64
        lrx:
          type: integer
          format: int64
        lry:
          type: integer
          format: int64
        uly:
          type: integer
          format: int64
        measureCount:
          type: integer
          format: int64
        comment:
            type: string
